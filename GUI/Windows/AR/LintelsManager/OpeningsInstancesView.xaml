<Window x:Class="MS.GUI.Windows.AR.LintelsManager.OpeningsInstancesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:MS.GUI.ViewModels.AR.LintelsManager"
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="1000" MinHeight="200" MinWidth="500"
        Title="Editing lintels in identical openings">
    <Window.DataContext>
        <vm:OpeningsInstancesViewModel />
    </Window.DataContext>
    <Grid>
        <Grid.Resources>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>
        <DataGrid ItemsSource="{Binding OpeningsView}"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  SelectedItem="{Binding SelectedOpening}"
                  IsSynchronizedWithCurrentItem="True"
                  AutoGenerateColumns="False"
                  EnableRowVirtualization="True"
                  EnableColumnVirtualization="True"
                  VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                  VirtualizingPanel.VirtualizationMode="Recycling"
                  VirtualizingPanel.IsVirtualizing="True"
                  ScrollViewer.CanContentScroll="True">
            <DataGrid.Resources>
                <Style TargetType="DataGridCell">
                    <Setter Property="TextBlock.TextAlignment" Value="Center" />
                </Style>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Height" Value="40" />
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Width="60"
                                    Header="Brand"
                                    Binding="{Binding Mark}">
                </DataGridTextColumn>
                <DataGridTextColumn Width="60"
                                    Binding="{Binding Width}"
                                    CanUserResize="False"
                                    IsReadOnly="True">
                    <DataGridTextColumn.Header>
                        <TextBlock TextAlignment="Center">
                                    <TextBlock>Width<LineBreak />opening</TextBlock>
                            </TextBlock>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Width="60"
                                    Binding="{Binding WallThick}"
                                    IsReadOnly="True"
                                    CanUserResize="False">
                    <DataGridTextColumn.Header>
                        <TextBlock TextAlignment="Center">
                                    <TextBlock>Thickness<LineBreak />Wall</TextBlock>
                            </TextBlock>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Width="100"
                                    Binding="{Binding WallHeightOverOpening}"
                                    IsReadOnly="True"
                                    CanUserResize="False">
                    <DataGridTextColumn.Header>
                        <TextBlock TextAlignment="Center">
                                    <TextBlock>Wall height<LineBreak />above opening</TextBlock>
                            </TextBlock>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Width="*"
                                    Header="wall type"
                                    Binding="{Binding WallMaterial}"
                                    IsReadOnly="True" />
                <DataGridTextColumn Width="100"
                                    Header="Level"
                                    Binding="{Binding Level}"
                                    IsReadOnly="True" />
                <DataGridTextColumn Width="75"
                                    Binding="{Binding DistanceToLeftEnd}"
                                    IsReadOnly="True"
                                    CanUserResize="False">
                    <DataGridTextColumn.Header>
                        <TextBlock TextAlignment="Center"
                                   ToolTip="Distance from the left side of the opening to the left end of the wall">
                                    <TextBlock>Distance<LineBreak />left</TextBlock>
                            </TextBlock>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Width="75"
                                    Binding="{Binding DistanceToRightEnd}"
                                    IsReadOnly="True"
                                    CanUserResize="False">
                    <DataGridTextColumn.Header>
                        <TextBlock TextAlignment="Center"
                                   ToolTip="Distance from the right side of the opening to the right end of the wall">
                                    <TextBlock>Distance<LineBreak />to the right</TextBlock>
                            </TextBlock>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
                <DataGridTextColumn Width ="220"
                                    Header="Lintel type"
                                    Binding="{Binding Lintel}"
                                    IsReadOnly="True" />
            </DataGrid.Columns>
        </DataGrid>
        <DockPanel Grid.Row="1">
            <UniformGrid DockPanel.Dock="Bottom" Rows="1">
                <Button Command="{Binding SetOrEditLintelCommand}"
                        CommandParameter="{Binding SelectedOpening}"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        ToolTip="If you correct an already created lintel, it will be recreated.
                         In order to change the lintel type, you must first remove it,
                         and then add.">
                    <Button.Content>
                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                            <TextBlock Text="Add/Edit" TextAlignment="Center" />
                            <TextBlock Text="Lintel" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Button Content="Remove Lintel"
                        Command="{Binding DeleteLintelCommand}"
                        CommandParameter="{Binding SelectedOpening}"
                        ToolTip="Если в списке удалить перемычку из проема, в модели она также удалится.
                        Если нужно изменить уже назначенный тип перемычки, то сначала нужно удалить перемычку." />
                <CheckBox IsChecked="{Binding UpdateLintelsLocation}"
                          Content="Adjust&#10;plan arrangements"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          VerticalContentAlignment="Center"
                          ToolTip="After pressing the OK button, the location of the Lintels&#10; will be adjusted according to the location of their openings. IMPORTANT!!! if the basis of the opening has changed, then the location will not be adjusted automatically and you will have to correct it manually!" />
                <Button Content="Go to&#10;3D Trimming the Opening"
                        HorizontalContentAlignment="Center"
                        Click="GoTo3D_clicked"
                        Command="{Binding GoToOpeningView3DCommand}" />
                <StackPanel Orientation="Vertical" Margin="1" VerticalAlignment="Bottom">
                    <TextBlock Text="Search:"></TextBlock>
                    <TextBox Text="{Binding OpeningsFilter, UpdateSourceTrigger=PropertyChanged}"
                           VerticalAlignment="Stretch"
                           HorizontalAlignment="Stretch"
                           Height="20"
                           TextAlignment="Left"></TextBox>
                </StackPanel>
                <Button Content="Ок"
                        Name="Ok"
                        Click="Ok_Click"
                        Command="{Binding UnsetGoToOpeningView3DCommand}" />
                <Button Content="Cancel"
                        Name="Cancel"
                        Click="Cancel_Click"
                        Command="{Binding UnsetGoToOpeningView3DCommand}" />
            </UniformGrid>
        </DockPanel>
    </Grid>
</Window>